/* layout.css
 * ==========
 *
 * Author: Alexander Hirzel <alex@hirzel.us>
 *
 *
 * Abstract
 * --------
 * This stylesheet provides general rules to structure a document and allow it
 * document to have multiple columns. This enables the designer to have much
 * more freedom in placing elements.
 *
 *
 * How to structure the document
 * -----------------------------
 * The <body> element must contain div#body-inner and div#page-footer only.
 * Each #top-navigation > ul > li must contain a div.padding.
 *
 * Width is set on .panel.
 * Only div.panels MUST immediately contain only a dummy div.
 *
 * Padding is to be set by .panel.padded
 *
 * The following elements must have an empty <span></span> as the last child:
 *   - div.multicolumn
 *   - div.sidebar
 *   - ul.horizontal-navigation    - must have <li></li>
 *
 *
 * How to use this stylesheet
 * --------------------------
 * In order to use these layout rules, content must be properly placed into
 * a hierarchy of <div> elements. Several hierarchies are possible. For each,
 * the top-level container is either (nothing), div.double or div.triple. The
 * requirements for each are as follows:
 *
 *   - (none)     - divides page into a wider main part and sidebar. Contains a
 *                  div.panel and a div.sidebar (one of each), inside either a
 *                  div.right or div.left (one of each);
 *
 *   - div.double - divides the page in half. Contains a div.left and a
 *                  div.right, each with child div.panel's;
 *
 *   - div.triple - divides the page into thirds. Contains a div.left,
 *                  div.center and div.right, each with child div.panel's.
 *
 * The div.left and div.right containers may contain a div.padding, which adds
 * a pattern that is consistent site-wide.
 *
 */

/* cleanse the margins so we don't have to worry about a stray (this layout is
 * particularly sensitive) */
html, body, div { margin: 0; padding: 0; }
html, body { height: 100%; }
body > #body-inner { min-height: 100%; }

/* center the whole page */
#body-inner, #page-footer { margin: 0 auto; }

/* generic padded container (which must contain another div) */
.panel.padded > div {
	padding: 0.15in;
}

/* Cool CS3 trick: an empty <span> at the end of a div will clear */
* + span:empty {
	clear: both;
	display: block;
}



/* Multi-column structural definitions
 * -----------------------------------
 */

#body-inner, #page-footer { width: 50em; }

/* sizes */
.multicolumn.two   > .left    > .panel,
.multicolumn.two   > .right   > .panel { width: 25em; }

.multicolumn.three > .left    > .panel,
.multicolumn.three > .center  > .panel,
.multicolumn.three > .right   > .panel { width: 16.666666666666em; }
.sidebar           > .sidebar > .panel { width: 14em; }
.sidebar           > .big     > .panel { width: 36em; }

/* ensure right item starts at the correct point */
/* may not be necessary with width instead of width
.multicolumn.two   > .right   > .panel { margin-left: -25em; }
.multicolumn.three > .right   > .panel { margin-left: -16.666666666666em; }
.sidebar           > .right.big     > .panel { margin-left: -36em; }
.sidebar           > .right.sidebar > .panel { margin-left: -14em; }
*/

/* behavior */
.multicolumn       > .left,
.sidebar           > .left   { float: left; }
.multicolumn       > .center { margin: 0 33.333333333333%; }
.multicolumn       > .right,
.sidebar           > .right  { float: right; }



/* Footer (just outside #body-inner
 * --------------------------------
 */

/* this must have the same height so the footer does not overlap with the
 * bottom of #content. */
#body-inner > #page-footer-placeholder {
	height: 3em;
}

#page-footer.panel.padded {
	height: 3em;
	margin-top: -3em;
}
